package com.aires.db.model;

// Generated Jul 23, 2014 1:40:15 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Samples generated by hbm2java
 */
@Entity
@Table(name = "Samples", schema = "dbo", catalog = "MOBILE_AirQuality")
public class Samples implements java.io.Serializable {

	private int sampleId;
	private SampleTypes sampleTypes;
	private DeviceTypes deviceTypes;
	private Projects projects;
	private String sampleNumber;
	private int ppeid;
	private String comments;
	private String notes;
	private Integer area;
	private Integer minutes;
	private Double volume;
	private String employeeName;
	private String employeeJob;
	private String operationArea;
	private Date createdOn;
	private Set<SampleChemicals> sampleChemicalses = new HashSet<SampleChemicals>(
			0);
	private Set<Results> resultses = new HashSet<Results>(0);
	private Set<Measurements> measurementses = new HashSet<Measurements>(0);
	private Set<SamplePpe> samplePpes = new HashSet<SamplePpe>(0);

	public Samples() {
	}

	public Samples(int sampleId, SampleTypes sampleTypes,
			DeviceTypes deviceTypes, Projects projects, String sampleNumber,
			int ppeid, Date createdOn) {
		this.sampleId = sampleId;
		this.sampleTypes = sampleTypes;
		this.deviceTypes = deviceTypes;
		this.projects = projects;
		this.sampleNumber = sampleNumber;
		this.ppeid = ppeid;
		this.createdOn = createdOn;
	}

	public Samples(int sampleId, SampleTypes sampleTypes,
			DeviceTypes deviceTypes, Projects projects, String sampleNumber,
			int ppeid, String comments, String notes, Integer area,
			Integer minutes, Double volume, String employeeName,
			String employeeJob, String operationArea, Date createdOn,
			Set<SampleChemicals> sampleChemicalses, Set<Results> resultses,
			Set<Measurements> measurementses, Set<SamplePpe> samplePpes) {
		this.sampleId = sampleId;
		this.sampleTypes = sampleTypes;
		this.deviceTypes = deviceTypes;
		this.projects = projects;
		this.sampleNumber = sampleNumber;
		this.ppeid = ppeid;
		this.comments = comments;
		this.notes = notes;
		this.area = area;
		this.minutes = minutes;
		this.volume = volume;
		this.employeeName = employeeName;
		this.employeeJob = employeeJob;
		this.operationArea = operationArea;
		this.createdOn = createdOn;
		this.sampleChemicalses = sampleChemicalses;
		this.resultses = resultses;
		this.measurementses = measurementses;
		this.samplePpes = samplePpes;
	}

	@Id
	@Column(name = "SampleId", unique = true, nullable = false)
	public int getSampleId() {
		return this.sampleId;
	}

	public void setSampleId(int sampleId) {
		this.sampleId = sampleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SampleTypeId", nullable = false)
	public SampleTypes getSampleTypes() {
		return this.sampleTypes;
	}

	public void setSampleTypes(SampleTypes sampleTypes) {
		this.sampleTypes = sampleTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DeviceTypeId", nullable = false)
	public DeviceTypes getDeviceTypes() {
		return this.deviceTypes;
	}

	public void setDeviceTypes(DeviceTypes deviceTypes) {
		this.deviceTypes = deviceTypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProjectId", nullable = false)
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Column(name = "SampleNumber", nullable = false, length = 10)
	public String getSampleNumber() {
		return this.sampleNumber;
	}

	public void setSampleNumber(String sampleNumber) {
		this.sampleNumber = sampleNumber;
	}

	@Column(name = "PPEId", nullable = false)
	public int getPpeid() {
		return this.ppeid;
	}

	public void setPpeid(int ppeid) {
		this.ppeid = ppeid;
	}

	@Column(name = "Comments", length = 500)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "Notes")
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "Area")
	public Integer getArea() {
		return this.area;
	}

	public void setArea(Integer area) {
		this.area = area;
	}

	@Column(name = "Minutes")
	public Integer getMinutes() {
		return this.minutes;
	}

	public void setMinutes(Integer minutes) {
		this.minutes = minutes;
	}

	@Column(name = "Volume", precision = 53, scale = 0)
	public Double getVolume() {
		return this.volume;
	}

	public void setVolume(Double volume) {
		this.volume = volume;
	}

	@Column(name = "EmployeeName", length = 50)
	public String getEmployeeName() {
		return this.employeeName;
	}

	public void setEmployeeName(String employeeName) {
		this.employeeName = employeeName;
	}

	@Column(name = "EmployeeJob", length = 50)
	public String getEmployeeJob() {
		return this.employeeJob;
	}

	public void setEmployeeJob(String employeeJob) {
		this.employeeJob = employeeJob;
	}

	@Column(name = "OperationArea", length = 50)
	public String getOperationArea() {
		return this.operationArea;
	}

	public void setOperationArea(String operationArea) {
		this.operationArea = operationArea;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", nullable = false, length = 23)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "samples")
	public Set<SampleChemicals> getSampleChemicalses() {
		return this.sampleChemicalses;
	}

	public void setSampleChemicalses(Set<SampleChemicals> sampleChemicalses) {
		this.sampleChemicalses = sampleChemicalses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "samples")
	public Set<Results> getResultses() {
		return this.resultses;
	}

	public void setResultses(Set<Results> resultses) {
		this.resultses = resultses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "samples")
	public Set<Measurements> getMeasurementses() {
		return this.measurementses;
	}

	public void setMeasurementses(Set<Measurements> measurementses) {
		this.measurementses = measurementses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "samples")
	public Set<SamplePpe> getSamplePpes() {
		return this.samplePpes;
	}

	public void setSamplePpes(Set<SamplePpe> samplePpes) {
		this.samplePpes = samplePpes;
	}

}
