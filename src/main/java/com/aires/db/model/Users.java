package com.aires.db.model;

// Generated Jul 23, 2014 1:40:15 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "Users", schema = "dbo", catalog = "MOBILE_AirQuality")
public class Users implements java.io.Serializable {

	private int userId;
	private Certifications certifications;
	private String firstName;
	private String lastName;
	private String email;
	private String loginName;
	private String iosdeviceId;
	private Date createdOn;
	private Set<UserProjects> userProjectses = new HashSet<UserProjects>(0);
	private Set<UserLogin> userLogins = new HashSet<UserLogin>(0);
	private Set<Projects> projectses = new HashSet<Projects>(0);

	public Users() {
	}

	public Users(int userId, Certifications certifications, String firstName,
			String lastName, String email, String loginName, Date createdOn) {
		this.userId = userId;
		this.certifications = certifications;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.loginName = loginName;
		this.createdOn = createdOn;
	}

	public Users(int userId, Certifications certifications, String firstName,
			String lastName, String email, String loginName,
			String iosdeviceId, Date createdOn,
			Set<UserProjects> userProjectses, Set<UserLogin> userLogins,
			Set<Projects> projectses) {
		this.userId = userId;
		this.certifications = certifications;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.loginName = loginName;
		this.iosdeviceId = iosdeviceId;
		this.createdOn = createdOn;
		this.userProjectses = userProjectses;
		this.userLogins = userLogins;
		this.projectses = projectses;
	}

	@Id
	@Column(name = "UserId", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CertificationId", nullable = false)
	public Certifications getCertifications() {
		return this.certifications;
	}

	public void setCertifications(Certifications certifications) {
		this.certifications = certifications;
	}

	@Column(name = "FirstName", nullable = false, length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "LastName", nullable = false, length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "Email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "LoginName", nullable = false, length = 50)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	@Column(name = "iOSDeviceId", length = 50)
	public String getIosdeviceId() {
		return this.iosdeviceId;
	}

	public void setIosdeviceId(String iosdeviceId) {
		this.iosdeviceId = iosdeviceId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CreatedOn", nullable = false, length = 23)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserProjects> getUserProjectses() {
		return this.userProjectses;
	}

	public void setUserProjectses(Set<UserProjects> userProjectses) {
		this.userProjectses = userProjectses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserLogin> getUserLogins() {
		return this.userLogins;
	}

	public void setUserLogins(Set<UserLogin> userLogins) {
		this.userLogins = userLogins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Projects> getProjectses() {
		return this.projectses;
	}

	public void setProjectses(Set<Projects> projectses) {
		this.projectses = projectses;
	}

}
