<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<context:property-placeholder location="classpath:resources/database.properties" />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven >
		<mvc:message-converters>
		<bean class="com.aires.json.MappingJackson2HttpMessageConverter">
			<property name="objectMapper">
				<bean class="com.aires.json.HibernateAwareObjectMapper" />
			</property>
		</bean>
	</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

	<context:component-scan base-package="com.aires" />



	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
	</bean>

	<bean
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		id="sessionFactory">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<beans:value>com.aires.model.Certifications</beans:value>
				<beans:value>com.aires.model.Chemicals</beans:value>
				<beans:value>com.aires.model.Clients</beans:value>
				<beans:value>com.aires.model.Contacts</beans:value>
				<beans:value>com.aires.model.DeviceTypes</beans:value>
				<beans:value>com.aires.model.LabReportRecipients</beans:value>
				<beans:value>com.aires.model.Labs</beans:value>
				<beans:value>com.aires.model.Measurements</beans:value>
				<beans:value>com.aires.model.Ppe</beans:value>
				<beans:value>com.aires.model.Projects</beans:value>
				<beans:value>com.aires.model.Results</beans:value>
				<beans:value>com.aires.model.SampleChemicals</beans:value>
				<beans:value>com.aires.model.SamplePpe</beans:value>
				<beans:value>com.aires.model.Samples</beans:value>
				<beans:value>com.aires.model.SampleTypes</beans:value>
				<beans:value>com.aires.model.TurnaroundTimes</beans:value>
				<beans:value>com.aires.model.Units</beans:value>
				<beans:value>com.aires.model.UserLogin</beans:value>
				<beans:value>com.aires.model.UserProjects</beans:value>
				<beans:value>com.aires.model.Users</beans:value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>
			</props>
		</property>
	</bean>

	<bean class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


</beans>
